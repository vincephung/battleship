{"ast":null,"code":"import _slicedToArray from\"/home/vincephung/Desktop/the_oden_project/battleship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./style.css';var Square=function Square(props){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),clicked=_useState2[0],setClick=_useState2[1];//coordinates starts with 0-99 corresponding to the board array,\n//convert this to i , j format\nvar getSquareCoordinates=function getSquareCoordinates(){var coordinates=props.coordinates;var i;var j;//account for cases 0-9\nif(coordinates<10){i=0;j=coordinates;}else{i=Math.floor(coordinates/10);j=coordinates%10;}return[i,j];};var coordinateArray=getSquareCoordinates();var i=coordinateArray[0];var j=coordinateArray[1];var hitStatus=props.currentPlayer.playerBoard.board[i][j];var boardSquare=props.boardSquare;var containerName=\"squareContainer\";var squareStatus=function squareStatus(){if(hitStatus==='hit'){return'hitShip';}else if(hitStatus==='miss'){return'clickedSquare';}else if(boardSquare===null){return'';}else{return'boardShip';}};var handleAttack=function handleAttack(){if(!props.gameStarted||props.gameEnded)return;if(boardSquare===null)boardSquare='miss';if(props.name!=='Computer'||clicked===true)return;// if you do not click player one's board return\nprops.handleClick(i,j);setClick(true);};return/*#__PURE__*/React.createElement(\"div\",{className:\"\".concat(containerName,\" \").concat(squareStatus()),onClick:handleAttack},props.coordinates,/*#__PURE__*/React.createElement(\"div\",{className:\"squareUnit\"}));};export default Square;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/battleship/src/components/Square.js"],"names":["React","useState","Square","props","clicked","setClick","getSquareCoordinates","coordinates","i","j","Math","floor","coordinateArray","hitStatus","currentPlayer","playerBoard","board","boardSquare","containerName","squareStatus","handleAttack","gameStarted","gameEnded","name","handleClick"],"mappings":"2KAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,aAAP,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,CAACC,KAAD,CAAW,eACIF,QAAQ,CAAC,KAAD,CADZ,wCACjBG,OADiB,eACRC,QADQ,eAGxB;AACA;AACA,GAAMC,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACjC,GAAIC,CAAAA,WAAW,CAAGJ,KAAK,CAACI,WAAxB,CACA,GAAIC,CAAAA,CAAJ,CACA,GAAIC,CAAAA,CAAJ,CACA;AACA,GAAIF,WAAW,CAAG,EAAlB,CAAsB,CACpBC,CAAC,CAAG,CAAJ,CACAC,CAAC,CAAGF,WAAJ,CACD,CAHD,IAGO,CACLC,CAAC,CAAGE,IAAI,CAACC,KAAL,CAAWJ,WAAW,CAAG,EAAzB,CAAJ,CACAE,CAAC,CAAGF,WAAW,CAAG,EAAlB,CACD,CAED,MAAO,CAACC,CAAD,CAAIC,CAAJ,CAAP,CACD,CAdD,CAgBA,GAAIG,CAAAA,eAAe,CAAGN,oBAAoB,EAA1C,CACA,GAAIE,CAAAA,CAAC,CAAGI,eAAe,CAAC,CAAD,CAAvB,CACA,GAAIH,CAAAA,CAAC,CAAGG,eAAe,CAAC,CAAD,CAAvB,CACA,GAAIC,CAAAA,SAAS,CAAGV,KAAK,CAACW,aAAN,CAAoBC,WAApB,CAAgCC,KAAhC,CAAsCR,CAAtC,EAAyCC,CAAzC,CAAhB,CAEA,GAAIQ,CAAAA,WAAW,CAAGd,KAAK,CAACc,WAAxB,CACA,GAAIC,CAAAA,aAAa,kBAAjB,CAEA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAIN,SAAS,GAAK,KAAlB,CAAyB,CACvB,MAAO,SAAP,CACD,CAFD,IAEO,IAAIA,SAAS,GAAK,MAAlB,CAA0B,CAC/B,MAAO,eAAP,CACD,CAFM,IAEA,IAAII,WAAW,GAAK,IAApB,CAA0B,CAC/B,MAAO,EAAP,CACD,CAFM,IAEA,CACL,MAAO,WAAP,CACD,CACF,CAVD,CAYA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAI,CAACjB,KAAK,CAACkB,WAAP,EAAsBlB,KAAK,CAACmB,SAAhC,CAA2C,OAC3C,GAAIL,WAAW,GAAK,IAApB,CAA0BA,WAAW,CAAG,MAAd,CAE1B,GAAId,KAAK,CAACoB,IAAN,GAAe,UAAf,EAA6BnB,OAAO,GAAK,IAA7C,CAAmD,OAAQ;AAE3DD,KAAK,CAACqB,WAAN,CAAkBhB,CAAlB,CAAqBC,CAArB,EACAJ,QAAQ,CAAC,IAAD,CAAR,CACD,CARD,CAUA,mBACE,2BACE,SAAS,WAAKa,aAAL,aAAsBC,YAAY,EAAlC,CADX,CAEE,OAAO,CAAEC,YAFX,EAIGjB,KAAK,CAACI,WAJT,cAKE,2BAAK,SAAS,CAAC,YAAf,EALF,CADF,CASD,CA5DD,CA8DA,cAAeL,CAAAA,MAAf","sourcesContent":["import React, { useState } from 'react';\nimport './style.css';\n\nconst Square = (props) => {\n  const [clicked, setClick] = useState(false);\n\n  //coordinates starts with 0-99 corresponding to the board array,\n  //convert this to i , j format\n  const getSquareCoordinates = () => {\n    let coordinates = props.coordinates;\n    let i;\n    let j;\n    //account for cases 0-9\n    if (coordinates < 10) {\n      i = 0;\n      j = coordinates;\n    } else {\n      i = Math.floor(coordinates / 10);\n      j = coordinates % 10;\n    }\n\n    return [i, j];\n  };\n\n  let coordinateArray = getSquareCoordinates();\n  let i = coordinateArray[0];\n  let j = coordinateArray[1];\n  let hitStatus = props.currentPlayer.playerBoard.board[i][j];\n\n  let boardSquare = props.boardSquare;\n  let containerName = `squareContainer`;\n\n  const squareStatus = () => {\n    if (hitStatus === 'hit') {\n      return 'hitShip';\n    } else if (hitStatus === 'miss') {\n      return 'clickedSquare';\n    } else if (boardSquare === null) {\n      return '';\n    } else {\n      return 'boardShip';\n    }\n  };\n\n  const handleAttack = () => {\n    if (!props.gameStarted || props.gameEnded) return;\n    if (boardSquare === null) boardSquare = 'miss';\n\n    if (props.name !== 'Computer' || clicked === true) return; // if you do not click player one's board return\n\n    props.handleClick(i, j);\n    setClick(true);\n  };\n\n  return (\n    <div\n      className={`${containerName} ${squareStatus()}`}\n      onClick={handleAttack}\n    >\n      {props.coordinates}\n      <div className=\"squareUnit\"></div>\n    </div>\n  );\n};\n\nexport default Square;\n"]},"metadata":{},"sourceType":"module"}