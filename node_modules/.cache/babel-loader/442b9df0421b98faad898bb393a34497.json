{"ast":null,"code":"import _slicedToArray from\"/home/vincephung/Desktop/the_oden_project/battleship/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Player from'../factories/player';import Board from'./Board';import Fleet from'./Fleet';var Game=function Game(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),gameStart=_useState2[0],setGameStart=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),gameEnd=_useState4[0],setGameEnd=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),winner=_useState6[0],setGameWinner=_useState6[1];var _useState7=useState(Player('Player')),_useState8=_slicedToArray(_useState7,2),playerOne=_useState8[0],setPlayer=_useState8[1];var _useState9=useState(Player('Computer')),_useState10=_slicedToArray(_useState9,2),computer=_useState10[0],setComputer=_useState10[1];var _useState11=useState(playerOne),_useState12=_slicedToArray(_useState11,2),turn=_useState12[0],setTurn=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),fleet=_useState14[0],updateFleet=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),resetFleet=_useState16[0],setResetFleet=_useState16[1];playerOne.enemy=computer;computer.enemy=playerOne;//everytime ship is manually input, rerender dom\nvar renderShips=function renderShips(){updateFleet(function(prevCount){return prevCount+1;});};var startGame=function startGame(){//if start game is clicked again, reset\nif(gameStart){resetGame();return;}if(fleet!==4){alert('Add all 4 ships first to start the game');return;}//user needs to input 4 ships to start\n//playerOne.autoPlaceFleet();\nsetGameStart(true);computer.autoPlaceFleet();setGameEnd(false);};var resetGame=function resetGame(){setPlayer(Player(Player.name));setComputer(Player(computer.name));setGameEnd(false);setGameStart(false);restartFleet(true);};var restartFleet=function restartFleet(){setResetFleet(false);};var handleClick=function handleClick(i,j){if(gameEnd)return false;var playerWins=playerOne.turn(playerOne.enemy,i,j);var computerWins=computer.randomAttack(computer.enemy);turn===playerOne?setTurn(computer):setTurn(playerOne);// this is just to update state every turn\nif(playerWins||computerWins){setGameEnd(playerWins||computerWins);setGameWinner(playerWins?playerOne.name:computer.name);}};return/*#__PURE__*/React.createElement(\"div\",{className:\"mainGame\"},/*#__PURE__*/React.createElement(\"div\",{className:\"gameContainer\"},/*#__PURE__*/React.createElement(Fleet,{playerBoard:playerOne.playerBoard,renderShips:renderShips,resetFleet:resetFleet,restartFleet:restartFleet}),/*#__PURE__*/React.createElement(Board,{name:\"PlayerOne\",board:playerOne.playerBoard.board.flat(),currentPlayer:playerOne,handleClick:handleClick,gameEnded:gameEnd,gameStarted:gameStart}),/*#__PURE__*/React.createElement(Board,{name:\"Computer\",board:computer.playerBoard.board.flat(),currentPlayer:computer,handleClick:handleClick,gameStarted:gameStart,gameEnded:gameEnd})),/*#__PURE__*/React.createElement(\"div\",{className:\"displayContainer\"},/*#__PURE__*/React.createElement(\"button\",{className:\"startBtn\",onClick:startGame},gameStart?'Restart Game':'Start Game'),/*#__PURE__*/React.createElement(\"div\",null,gameEnd?\"The winner is \".concat(winner):'')));};export default Game;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/battleship/src/components/Game.js"],"names":["React","useState","Player","Board","Fleet","Game","gameStart","setGameStart","gameEnd","setGameEnd","winner","setGameWinner","playerOne","setPlayer","computer","setComputer","turn","setTurn","fleet","updateFleet","resetFleet","setResetFleet","enemy","renderShips","prevCount","startGame","resetGame","alert","autoPlaceFleet","name","restartFleet","handleClick","i","j","playerWins","computerWins","randomAttack","playerBoard","board","flat"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Player from '../factories/player';\nimport Board from './Board';\nimport Fleet from './Fleet';\n\nconst Game = () => {\n  const [gameStart, setGameStart] = useState(false);\n  const [gameEnd, setGameEnd] = useState(false);\n  const [winner, setGameWinner] = useState('');\n  const [playerOne, setPlayer] = useState(Player('Player'));\n  const [computer, setComputer] = useState(Player('Computer'));\n  const [turn, setTurn] = useState(playerOne);\n  const [fleet, updateFleet] = useState(0);\n  const [resetFleet, setResetFleet] = useState(false);\n\n  playerOne.enemy = computer;\n  computer.enemy = playerOne;\n\n  //everytime ship is manually input, rerender dom\n  const renderShips = () => {\n    updateFleet((prevCount) => prevCount + 1);\n  };\n  const startGame = () => {\n    //if start game is clicked again, reset\n    if (gameStart) {\n      resetGame();\n      return;\n    }\n\n    if (fleet !== 4) {\n      alert('Add all 4 ships first to start the game');\n      return;\n    } //user needs to input 4 ships to start\n\n    //playerOne.autoPlaceFleet();\n    setGameStart(true);\n    computer.autoPlaceFleet();\n    setGameEnd(false);\n  };\n\n  const resetGame = () => {\n    setPlayer(Player(Player.name));\n    setComputer(Player(computer.name));\n    setGameEnd(false);\n    setGameStart(false);\n    restartFleet(true);\n  };\n\n  const restartFleet = () => {\n    setResetFleet(false);\n  };\n\n  const handleClick = (i, j) => {\n    if (gameEnd) return false;\n\n    const playerWins = playerOne.turn(playerOne.enemy, i, j);\n    const computerWins = computer.randomAttack(computer.enemy);\n\n    turn === playerOne ? setTurn(computer) : setTurn(playerOne); // this is just to update state every turn\n\n    if (playerWins || computerWins) {\n      setGameEnd(playerWins || computerWins);\n      setGameWinner(playerWins ? playerOne.name : computer.name);\n    }\n  };\n\n  return (\n    <div className=\"mainGame\">\n      <div className=\"gameContainer\">\n        <Fleet\n          playerBoard={playerOne.playerBoard}\n          renderShips={renderShips}\n          resetFleet={resetFleet}\n          restartFleet={restartFleet}\n        />\n        <Board\n          name=\"PlayerOne\"\n          board={playerOne.playerBoard.board.flat()}\n          currentPlayer={playerOne}\n          handleClick={handleClick}\n          gameEnded={gameEnd}\n          gameStarted={gameStart}\n        />\n        <Board\n          name=\"Computer\"\n          board={computer.playerBoard.board.flat()}\n          currentPlayer={computer}\n          handleClick={handleClick}\n          gameStarted={gameStart}\n          gameEnded={gameEnd}\n        />\n      </div>\n      <div className=\"displayContainer\">\n        <button className=\"startBtn\" onClick={startGame}>\n          {gameStart ? 'Restart Game' : 'Start Game'}\n        </button>\n        <div>{gameEnd ? `The winner is ${winner}` : ''}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}