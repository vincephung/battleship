{"ast":null,"code":"var Ship=function Ship(shipName,isHorizontal){var shipTypes={Destroyer:2,Cruiser:3,Battleship:4,Carrier:5};var length=shipTypes[shipName];var name=shipName;var getLength=function getLength(){return length;};//store which part of ship has been hit;\nvar body=Array(length).fill(false);//position is coordinates?\nvar markHit=function markHit(position){//look for position in boardPosition array then mark that index in the body as hit.\n//example: ship is located at [[0,0] [0,1] [0,2]] , if [0,1] is hit, mark body[1] as hit\nbody[position]=true;isSunk();};var isSunk=function isSunk(){//if whole body array is \"hit\" return true\nreturn body.every(Boolean);};return{name:name,body:body,isHorizontal:isHorizontal,markHit:markHit,getLength:getLength,isSunk:isSunk};};export default Ship;","map":{"version":3,"sources":["/home/vincephung/Desktop/the_oden_project/battleship/src/factories/ship.js"],"names":["Ship","shipName","isHorizontal","shipTypes","Destroyer","Cruiser","Battleship","Carrier","length","name","getLength","body","Array","fill","markHit","position","isSunk","every","Boolean"],"mappings":"AAAA,GAAMA,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,CAACC,QAAD,CAAWC,YAAX,CAA4B,CACvC,GAAMC,CAAAA,SAAS,CAAG,CAChBC,SAAS,CAAE,CADK,CAEhBC,OAAO,CAAE,CAFO,CAGhBC,UAAU,CAAE,CAHI,CAIhBC,OAAO,CAAE,CAJO,CAAlB,CAOA,GAAMC,CAAAA,MAAM,CAAGL,SAAS,CAACF,QAAD,CAAxB,CACA,GAAMQ,CAAAA,IAAI,CAAGR,QAAb,CAEA,GAAMS,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,SAAMF,CAAAA,MAAN,EAAlB,CAEA;AACA,GAAMG,CAAAA,IAAI,CAAGC,KAAK,CAACJ,MAAD,CAAL,CAAcK,IAAd,CAAmB,KAAnB,CAAb,CAEA;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,QAAD,CAAc,CAC5B;AACA;AACAJ,IAAI,CAACI,QAAD,CAAJ,CAAiB,IAAjB,CACAC,MAAM,GACP,CALD,CAOA,GAAMA,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,EAAM,CACnB;AACA,MAAOL,CAAAA,IAAI,CAACM,KAAL,CAAWC,OAAX,CAAP,CACD,CAHD,CAKA,MAAO,CAAET,IAAI,CAAJA,IAAF,CAAQE,IAAI,CAAJA,IAAR,CAAcT,YAAY,CAAZA,YAAd,CAA4BY,OAAO,CAAPA,OAA5B,CAAqCJ,SAAS,CAATA,SAArC,CAAgDM,MAAM,CAANA,MAAhD,CAAP,CACD,CA9BD,CAgCA,cAAehB,CAAAA,IAAf","sourcesContent":["const Ship = (shipName, isHorizontal) => {\n  const shipTypes = {\n    Destroyer: 2,\n    Cruiser: 3,\n    Battleship: 4,\n    Carrier: 5,\n  };\n\n  const length = shipTypes[shipName];\n  const name = shipName;\n\n  const getLength = () => length;\n\n  //store which part of ship has been hit;\n  const body = Array(length).fill(false);\n\n  //position is coordinates?\n  const markHit = (position) => {\n    //look for position in boardPosition array then mark that index in the body as hit.\n    //example: ship is located at [[0,0] [0,1] [0,2]] , if [0,1] is hit, mark body[1] as hit\n    body[position] = true;\n    isSunk();\n  };\n\n  const isSunk = () => {\n    //if whole body array is \"hit\" return true\n    return body.every(Boolean);\n  };\n\n  return { name, body, isHorizontal, markHit, getLength, isSunk };\n};\n\nexport default Ship;\n"]},"metadata":{},"sourceType":"module"}